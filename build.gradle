plugins {
    id 'jacoco'
    id 'java-library'
    id 'java-library-distribution'
    id("de.jjohannes.extra-java-module-info") version "0.1"
}

extraJavaModuleInfo {
    module("commons-logging-1.2.jar", "commons.logging", "1.2") {}
    module("javax.servlet-api-3.1.0.jar", "javax.servlet.api", "3.1.0") {
        exports "javax.servlet.http"
        exports "javax.servlet"
    }
    module("jsoup-1.12.1.jar", "org.jsoup", "1.12.1") {
        exports "org.jsoup"
        exports "org.jsoup.nodes"
        exports "org.jsoup.select"
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

dependencies {
    implementation project(':scraper-nodes-dev')
//    implementation project(':scraper-nodes-erlang')
//    implementation project(':scraper-nodes-server')
//    implementation project(':scraper-nodes-unstable')
//    implementation project(':scraper-nodes-experimental')
}

plugins.withType(JavaPlugin).configureEach {
    java {
        modularity.inferModulePath = true
    }
}


configure(subprojects.findAll {it.name != 'api'}) {
    configurations {
        providedCompile
    }

    afterEvaluate {
        dependencies {
            providedCompile project(':api')

            testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
            testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.1'
            testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        }

        compileJava {
            sourceSets.main.compileClasspath += configurations.providedCompile
        }
    }

    group = 'org.scraper'

    plugins.withType(JavaPlugin).configureEach {
        java {
            modularity.inferModulePath = true
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }
}

// merge coverage
apply from: 'gradle/jacoco-merge.gradle'

// local install
task installLocal(type: Copy) {
    def homePath = System.properties['user.home']
    from("${buildDir}/install/scraper-nodes/lib")
    into("${homePath}/opt/lib/scraper/var")
    include('*.jar')
}
installLocal.dependsOn(installDist);


task distribute(type: Zip) {
    archiveFileName = "bundle.zip"
    destinationDirectory = file("$buildDir/dist")

    from "$buildDir/install/scraper-nodes/lib"
}
distribute.dependsOn(installDist);
